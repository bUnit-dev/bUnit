name: Pull request code checks

on:
  pull_request:
    branches:
      - dev
    paths:
      - 'src/**'

jobs:
  dotnet-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2   
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100-preview.7.20366.6'
      - name: Move .net SDK's to shared folder (hack)
        shell: pwsh
        run: |
          $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          foreach ($dir in $directories) {
            $from = $dir.FullName;
            $to = "$root/$version";
            Write-Host Copying from $from to $to;
            Copy-Item "$from\*" $to -Recurse -Force;
          }

      - name: Running unit tests
        run: dotnet test src --verbosity normal /nowarn:CS1591 /p:CollectCoverage=true /p:CoverletOutput=./coverage/ /p:CoverletOutputFormat=lcov

      - uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: src/bunit.core.tests/coverage/coverage.net5.0.info
          parallel: true
      - uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: src/bunit.core.tests/coverage/coverage.netcoreapp3.1.info
          parallel: true

      - uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: src/bunit.web.tests/coverage/coverage.net5.0.info
          parallel: true
      - uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: src/bunit.web.tests/coverage/coverage.netcoreapp3.1.info
          parallel: true

      - uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: src/bunit.xunit.tests/coverage/coverage.net5.0.info
          parallel: true
      - uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: src/bunit.xunit.tests/coverage/coverage.netcoreapp3.1.info
          parallel: true

      - uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true

  dotnet-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100-preview.7.20366.6'
      - name: Move .net SDK's to shared folder (hack)
        shell: pwsh
        run: |
          $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          foreach ($dir in $directories) {
            $from = $dir.FullName;
            $to = "$root/$version";
            Write-Host Copying from $from to $to;
            Copy-Item "$from\*" $to -Recurse -Force;
          }

      - name: Install dotnet-format
        run: dotnet tool install -g dotnet-format

      - name: Run dotnet-format
        run: dotnet format src --verbosity diag

      - name: Commit formatted files      
        uses: EndBug/add-and-commit@v4.1.0
        with:
          add: 'src'
          author_name: Github Actions
          author_email: actions@github.com
          message: Automated dotnet-format update
          ref: ${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  code-scan:    
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 0

      # If this run was triggered by a pull request event, then checkout
      # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.100-preview.7.20366.6'
    - name: Move .net SDK's to shared folder (hack)
      shell: pwsh
      run: |
        $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
        $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
        $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
        foreach ($dir in $directories) {
          $from = $dir.FullName;
          $to = "$root/$version";
          Write-Host Copying from $from to $to;
          Copy-Item "$from\*" $to -Recurse -Force;
        }

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: csharp
        config-file: ./.github/codeql/codeql-config.yml

    - name: Building library
      run: dotnet build src -p:ContinuousIntegrationBuild=true -p:DeterministicSourcePaths=true

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1          