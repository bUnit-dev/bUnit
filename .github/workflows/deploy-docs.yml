name: "Build and Deploy Docs"

on:
  push:
    branches: 
      - main
    paths-ignore:
      - '!docs/**'
      - '!.github/**'

jobs:
  build:
    runs-on: windows-latest
    env:
      VERSION: ''
    steps:
      - uses: actions/checkout@v2   
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

      - uses: dotnet/nbgv@master
        with:
          setAllVars: true

      - name: Setting VERSION
        run: echo "::set-env name=VERSION::$NBGV_NuGetPackageVersion"
      
      - name: Update tokens in project files
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["docs/site/*.md", "docs/**/*.md", "docs/**/*.tmpl.partial", "*.csproj", "**/*.csproj"]'
      
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100-rc.1.20452.10'
      - name: DOTNET HACK
        shell: pwsh
        run: |
          $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          foreach ($dir in $directories) {
            $from = $dir.FullName;
            $to = "$root/$version";
            Write-Host Copying from $from to $to;
            Copy-Item "$from\*" $to -Recurse -Force;
          }
      
      - name: Building library
        run: dotnet build /p:PublicRelease=true

      - name: Verfiy docs samples
        run: dotnet test docs/samples

      - name: Building docs
        run: |    
          dotnet build docs/site/
          dotnet build docs/site/          
          
      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: docs/site/_site 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
