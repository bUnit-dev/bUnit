name: "docs-deploy"
concurrency: "docs-deploy"

on:
  push:
    branches:
      - stable
    paths:
      - 'docs/**'

  workflow_run:
    branches: [ main ]
    workflows: [ 'release' ]
    types: [ completed ]

  workflow_dispatch:

jobs:
  deploy:
    name: üìÉ Deploy new version bunit.dev
    if: github.ref == 'refs/heads/stable' || ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:

      - name: üõí Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.BUNIT_BOT_TOKEN }}

      - name: ‚öôÔ∏è Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.BUNIT_BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BUNIT_BOT_GPG_KEY_PASSPHRASE }}

      - name: ‚öôÔ∏è Setup CI GIT
        run: |
          git config user.name "${{ steps.import_gpg.outputs.name }}"
          git config user.email ${{ steps.import_gpg.outputs.email }}
          git config --global user.signingkey ${{ steps.import_gpg.outputs.keyid }}
          git config --global commit.gpgsign true

      - name: ‚öôÔ∏è Setup GIT versioning
        uses: dotnet/nbgv@v0.4.0
        with:
          setAllVars: true

      - name: üõ†Ô∏è Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          path: ./CHANGELOG.md

      - name: üõ†Ô∏è Update tokens in project files
        uses: cschleiden/replace-tokens@v1
        env:
          RELEASE-VERSION: ${{ steps.changelog_reader.outputs.version }}
        with:
          files: '["docs/site/*.md", "docs/**/*.md", "docs/**/*.tmpl.partial", "*.csproj", "**/*.csproj"]'

      - name: ‚öôÔ∏è Setup dotnet versions
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            3.1.x
            5.0.x
            6.0.x
            7.0.x
          include-prerelease: true
      
      - name: üé® Setup color
        run: |
          echo "DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION=1" >> $GITHUB_ENV
          echo "TERM=xterm" >> $GITHUB_ENV

      - name: üõ†Ô∏è Building bUnit
        run: dotnet build /p:PublicRelease=true

      - name: üõ†Ô∏è Verfiy docs samples
        run: dotnet test docs/samples/samples.sln

      - name: üõ†Ô∏è Building docs
        uses: nikeee/docfx-action@v1.0.0
        with:
          args: docs/site/docfx.json          

      - name: üõ†Ô∏è Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          build_dir: docs/site/_site
          fqdn: bunit.dev
          repo: bUnit-dev/bUnit-dev.github.io
          target_branch: main
          keep_history: false
          jekyll: false
          committer: "bUnit bot <bot@bunit.dev>"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_PAT: ${{ secrets.BUNIT_BOT_TOKEN }}

      - name: ‚è© Merge stable with main, push origin
        id: mergeMainline
        continue-on-error: true      
        run: |
          git checkout main
          git merge -S stable
          git push origin main

      - name: ‚è≠ Create pull request from stable to main when direct merge fails
        if: steps.mergeMainline.outcome == 'failure'
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.BUNIT_BOT_TOKEN }}
        with:
          head: stable
          base: main
          title: Update main with documentation in stable
          reviewers: ${{ github.actor }} # By default, we request a review from the person who triggered the workflow.
          body: |
            Hi @${{ github.actor }}

            This PR was created because the [docs-deploy](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) failed to automatically merge stable into main.
