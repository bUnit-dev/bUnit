name: "Verify code"

on:
  pull_request:
    types: 
      - opened
      - synchronize
      - reopened
    paths:
      - 'src/**'
  push:
    branches:
      - dev
      - main
    paths:
      - 'src/**'

jobs:
  dotnet-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2   
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100-preview.7.20366.6'
      - name: Move .net SDK's to shared folder (hack)
        shell: pwsh
        run: |
          $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          foreach ($dir in $directories) {
            $from = $dir.FullName;
            $to = "$root/$version";
            Write-Host Copying from $from to $to;
            Copy-Item "$from\*" $to -Recurse -Force;
          }

      - name: Running unit tests
        run: dotnet test src /nowarn:CS1591 /p:CollectCoverage=true /p:CoverletOutput=./coverage/ /p:CoverletOutputFormat=opencover /p:ExcludeByAttribute=\"Obsolete,GeneratedCodeAttribute,CompilerGeneratedAttribute\" /p:UseSourceLink=true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
  
  verify-template:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2   
        with:
          fetch-depth: 0

      - uses: dotnet/nbgv@master
        with:
          setAllVars: true

      - name: Setting VERSION and BRANCH env
        run: |
          echo "::set-env name=VERSION::$NBGV_NuGetPackageVersion"
          echo "::set-env name=BRANCH::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')"

      - name: Update tokens in project files
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["*.csproj", "**/*.csproj"]'

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100-preview.7.20366.6'
      - name: Move .net SDK's to shared folder (hack)
        shell: pwsh
        run: |
          $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          foreach ($dir in $directories) {
            $from = $dir.FullName;
            $to = "$root/$version";
            Write-Host Copying from $from to $to;
            Copy-Item "$from\*" $to -Recurse -Force;
          }

      - name: Creating library package
        run: |
          dotnet pack src/bunit.core/ -c Release -o ${GITHUB_WORKSPACE}/packages -p:RepositoryBranch=$BRANCH -p:ContinuousIntegrationBuild=true -p:DeterministicSourcePaths=true
          dotnet pack src/bunit.web/ -c Release -o ${GITHUB_WORKSPACE}/packages -p:RepositoryBranch=$BRANCH -p:ContinuousIntegrationBuild=true -p:DeterministicSourcePaths=true
          dotnet pack src/bunit.xunit/ -c Release -o ${GITHUB_WORKSPACE}/packages -p:RepositoryBranch=$BRANCH -p:ContinuousIntegrationBuild=true -p:DeterministicSourcePaths=true
          dotnet pack src/bunit/ -c Release -o ${GITHUB_WORKSPACE}/packages -p:RepositoryBranch=$BRANCH -p:ContinuousIntegrationBuild=true -p:DeterministicSourcePaths=true
          dotnet pack src/bunit.template/ -c Release -o ${GITHUB_WORKSPACE}/packages
      
      - name: Verifying template
        run: |
          dotnet new --install ${GITHUB_WORKSPACE}/packages/bunit.template.$VERSION.nupkg
          dotnet new bunit --no-restore -o ${GITHUB_WORKSPACE}/Test
          dotnet restore ${GITHUB_WORKSPACE}/Test/Test.csproj --source ${GITHUB_WORKSPACE}/packages --source https://api.nuget.org/v3/index.json
          dotnet test ${GITHUB_WORKSPACE}/Test