name: verification

on:
  push:
    branches:
      - main
      - v2
    paths:
      - 'src/**'
      - 'tests/**'

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

  workflow_dispatch:

concurrency:
  group: verification-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  verify-bunit:
    name: 👌 Verify bUnit
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ⚙️ Setup dotnet versions
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            3.1.x
            5.0.x
            6.0.x
            7.0.x
          include-prerelease: true

      - name: 🎨 Setup color
        if: matrix.os != 'windows-latest'
        run: |
          echo "DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION=1" >> $GITHUB_ENV
          echo "TERM=xterm" >> $GITHUB_ENV

      - name: ⚙️ Setup GIT versioning
        uses: dotnet/nbgv@v0.4.0
        with:
          setAllVars: true

      - name: 🍥 Replace tokens in files
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["docs/site/*.md", "docs/**/*.md", "docs/**/*.tmpl.partial", "*.csproj", "**/*.csproj"]'

      - name: 🧪 Run unit tests (async)
        run: |
          dotnet test --filter Category!=sync -c release --blame-hang-timeout 15s --blame-hang-dump-type full --blame-crash-dump-type full
      - name: 🧪 Run unit tests (sync)
        run: |
          dotnet test --filter Category!=async -c release --blame-hang-timeout 15s --blame-hang-dump-type full --blame-crash-dump-type full
      - name: 📛 Upload hang- and crash-dumps on test failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: ignore
          name: test-dumps
          path: |
            **/*hangdump.dmp
            **/*crashdump.dmp

      - name: 🗳️ Pack library
        run: |
          dotnet pack -c release -o ${{ github.workspace }}/packages -p:ContinuousIntegrationBuild=true
          dotnet pack src/bunit/ -c release -o ${{ github.workspace }}/packages -p:ContinuousIntegrationBuild=true
          dotnet pack src/bunit.template/ -c release -o ${{ github.workspace }}/packages -p:ContinuousIntegrationBuild=true

      - name: ✳ Install bUnit template
        run: |
          dotnet new --install bunit.template::${NBGV_NuGetPackageVersion} --nuget-source ${{ github.workspace }}/packages

      - name: ✔ Verify xUnit template
        run: |
          dotnet new bunit --no-restore -o ${{ github.workspace }}/TemplateTestXunit
          echo '<?xml version="1.0" encoding="utf-8"?><Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"></Project>' >> ${{ github.workspace }}/TemplateTestXunit/Directory.Build.props
          dotnet restore ${{ github.workspace }}/TemplateTestXunit --source https://api.nuget.org/v3/index.json --source ${{ github.workspace }}/packages
          dotnet test ${{ github.workspace }}/TemplateTestXunit

      - name: ✔ Verify NUnit template
        run: |
          dotnet new bunit --framework nunit --no-restore -o ${{ github.workspace }}/TemplateTestNunit
          echo '<?xml version="1.0" encoding="utf-8"?><Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"></Project>' >> ${{ github.workspace }}/TemplateTestNunit/Directory.Build.props
          dotnet restore ${{ github.workspace }}/TemplateTestNunit --source https://api.nuget.org/v3/index.json --source ${{ github.workspace }}/packages
          dotnet test ${{ github.workspace }}/TemplateTestNunit

      - name: ✔ Verify MSTest template
        run: |
          dotnet new bunit --framework mstest --no-restore -o ${{ github.workspace }}/TemplateTestMstest
          echo '<?xml version="1.0" encoding="utf-8"?><Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"></Project>' >> ${{ github.workspace }}/TemplateTestMstest/Directory.Build.props
          dotnet restore ${{ github.workspace }}/TemplateTestMstest --source https://api.nuget.org/v3/index.json --source ${{ github.workspace }}/packages
          dotnet test ${{ github.workspace }}/TemplateTestMstest

      # DocFx only works well on Windows currently
      - name: 📄 Build documentation
        if: matrix.os == 'windows-latest'
        run: dotnet build docs/site/
