name: verification

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'tests/**'

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

  workflow_dispatch:

jobs:
  verify-bunit:
    name: 👌 Verify bUnit
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ⚙️ Setup dotnet 3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: ⚙️ Setup dotnet 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: ⚙️ Setup dotnet 6.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.100-preview.3.21202.5'

      - name: ⚙️ Setup GIT versioning
        uses: dotnet/nbgv@v0.4.0
        with:
          setAllVars: true

      - name: 🍥 Replace tokens in files
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["docs/site/*.md", "docs/**/*.md", "docs/**/*.tmpl.partial", "*.csproj", "**/*.csproj"]'

      - name: 🐜 Ensure nuget.org source on Windows
        if: matrix.os == 'windows-latest'
        run: dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org --configfile $env:APPDATA\NuGet\NuGet.Config
        continue-on-error: true

      - name: 🧪 Run unit tests
        run: |
          dotnet test ./tests/bunit.core.tests/bunit.core.tests.csproj -c release --logger GitHubActions
          dotnet test ./tests/bunit.web.tests/bunit.web.tests.csproj -c release --logger GitHubActions
          dotnet test ./tests/bunit.web.testcomponents.tests/bunit.web.testcomponents.tests.csproj -c release --logger GitHubActions

      - name: 🗳️ Pack library
        run: |          
          dotnet pack -c release -o ${GITHUB_WORKSPACE}/packages -p:ContinuousIntegrationBuild=true
          dotnet pack src/bunit/ -c release -o ${GITHUB_WORKSPACE}/packages -p:ContinuousIntegrationBuild=true
          dotnet pack src/bunit.template/ -c release -o ${GITHUB_WORKSPACE}/packages -p:ContinuousIntegrationBuild=true

      # Excluding windows because the restore step doesnt seem to work correct.
      - name: ✔ Verify template
        if: matrix.os != 'windows-latest'
        run: |
          dotnet new --install bunit.template::${NBGV_NuGetPackageVersion} --nuget-source ${GITHUB_WORKSPACE}/packages
          dotnet new bunit --no-restore -o ${GITHUB_WORKSPACE}/TemplateTest
          echo '<?xml version="1.0" encoding="utf-8"?><Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"></Project>' >> ${GITHUB_WORKSPACE}/TemplateTest/Directory.Build.props
          dotnet restore ${GITHUB_WORKSPACE}/TemplateTest --source ${GITHUB_WORKSPACE}/packages --source https://api.nuget.org/v3/index.json
          dotnet test ${GITHUB_WORKSPACE}/TemplateTest

      # DocFx only works well on Windows currently
      - name: 📄 Build documentation
        if: matrix.os == 'windows-latest'
        run: dotnet build docs/site/
