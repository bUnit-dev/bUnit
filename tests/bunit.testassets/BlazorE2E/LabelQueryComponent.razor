@* Testing aria-label *@
@foreach (var htmlElement in htmlElementsThatCanHaveALabel)
{
	@((MarkupString) $"""<{htmlElement} id="{htmlElement}-with-aria-label" aria-label="{htmlElement} Aria Label"></{htmlElement}>""")
}

@* Testing aria-labelledby *@
@foreach (var htmlElement in htmlElementsThatCanHaveALabel)
{
	<h2 id="@htmlElement-with-aria-labelledby">@htmlElement Aria Labelled By</h2>
	@((MarkupString) $"""<{htmlElement} aria-labelledby="{htmlElement}-with-aria-labelledby"></{htmlElement}>""")
}


@* Testing we get back the re-rendered element for an aria-label *@
<label for="re-rendered-input-with-label">Re-rendered input with label</label>
<input @bind="@_count" id="re-rendered-input-with-label" />

<label>Re-rendered input with wrapped label
	<input @bind="@_count" />
</label>

<input @bind="@_count" aria-label="Re-rendered input With Aria Label" />

<h2 id="re-rendered-input-with-aria-labelledby">Re-rendered input with Aria Labelledby</h2>
<input aria-labelledby="re-rendered-input-with-aria-labelledby" @bind="@_count" />

<button id="increment-button" @onclick="IncrementCount">Click</button>

@code {
	readonly List<string> htmlElementsThatCanHaveALabel = new()
	{
		"input",
		"select",
		"textarea",
		"button",
		"meter",
		"output",
		"progress",
	};

	private int _count;
	public void IncrementCount() => _count++;
}
